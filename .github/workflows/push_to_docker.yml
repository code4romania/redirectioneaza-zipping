on:
  push:
    branches:
      - main

name: Deploy to Docker Hub

jobs:
  push-to-gcloud:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set tag env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> ${GITHUB_ENV}

      - name: Prepare environment
        run: |
          [ -d "${GITHUB_WORKSPACE}/creds" ] || mkdir "${GITHUB_WORKSPACE}/creds"
          echo "${STORAGE_CREDENTIALS}" > "${GITHUB_WORKSPACE}/creds/storage-credentials.json"
          
          cat <<EOT >> "${GITHUB_WORKSPACE}/.env"
          RUNNING_MODE="${RUNNING_MODE:-background}"
          RUN_CLEAN_UP="${RUN_CLEAN_UP:-True}"
          
          GOOGLE_APPLICATION_CREDENTIALS="${GITHUB_WORKSPACE}/creds/storage-credentials.json"
          
          BUCKET_NAME="${STORAGE_BUCKET_NAME}"
          SECRET_PASSPHRASE="${APPLICATION_PASSPHRASE}"
          EOT

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE_BASE }}:latest,${{ env.DOCKER_IMAGE_BASE }}:${{ env.RELEASE_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
